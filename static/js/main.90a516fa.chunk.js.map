{"version":3,"sources":["styles/index.ts","components/Card.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["H2Title","styled","h2","Ribbon","div","props","active","CardsStyle","margin","width","CardsContainer","padding","Centered","p","muted","bold","styledMui","TableCell","theme","tableCellClasses","head","backgroundColor","palette","common","black","color","white","body","fontSize","NetworkCard","_network","n","avatar","src","process","icon","aria-label","action","title","name","subheader","tokenSymbol","network","App","initNetwork","useState","setNetwork","networkNoStatus","setNetworkNoStatus","getStatus","Promise","all","map","e","index","a","axios","toLowerCase","data","numeration","useEffect","resp","Object","entries","filter","tokenDecimals","sort","b","textA","textB","getNetworkConn","setConnection","setInterval","clearInterval","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.90a516fa.chunk.js","sourcesContent":["import styled from '@emotion/styled';\nimport { styled as styledMui } from '@mui/material/styles';\nimport TableCell, { tableCellClasses } from '@mui/material/TableCell';\n\ntype ContainerProps = {\n  padding?: string;\n};\n\ntype CardsStyleProps = {\n  margin?: string;\n  width?: string;\n};\n\ntype RibbonProps = {\n  active: boolean;\n};\n\ntype LabelProps = {\n  muted?: boolean;\n  bold?: boolean;\n};\n\nexport const H2Title = styled.h2`\n  text-align: center;\n  margin: 1rem 0;\n`;\n\nexport const Ribbon = styled.div`\n  position: absolute;\n  top: 10px;\n  right: 0;\n  background-color: ${(props: RibbonProps) => (props.active ? 'green' : 'red')};\n  padding: 5px;\n  font-size: 12px;\n  color: white;\n  font-weight: bold;\n  border-radius: 5px 0 0 5px;\n`;\n\nexport const CardsStyle = styled.div`\n  margin-right: ${(props: CardsStyleProps) =>\n    props.margin ? props.margin : '1rem'};\n  margin-bottom: ${(props: CardsStyleProps) =>\n    props.margin ? props.margin : '1rem'};\n  width: ${(props: CardsStyleProps) => (props.width ? props.width : '30%')};\n  position: relative;\n`;\n\nexport const CardsContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  padding: ${(props: ContainerProps) =>\n    props.padding ? props.padding : '1rem'};\n`;\n\nexport const Centered = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 90vh;\n`;\n\nexport const NameCell = styled.div`\n  display: flex;\n  align-items: center;\n  width: 30%;\n  justify-content: space-between;\n`;\n\nexport const Label = styled.p`\n  color: ${(props: LabelProps) => (props.muted ? 'gray' : '')};\n  font-weight: ${(props: LabelProps) => (props.bold ? 'bold' : '')};\n`;\n\nexport const StyledTableCell = styledMui(TableCell)(({ theme }) => ({\n  [`&.${tableCellClasses.head}`]: {\n    backgroundColor: theme.palette.common.black,\n    color: theme.palette.common.white,\n  },\n  [`&.${tableCellClasses.body}`]: {\n    fontSize: 14,\n  },\n}));\n","import * as Mui from '@mui/material';\nimport { Network } from '../models/Network';\nimport { CardsStyle, Ribbon } from '../styles';\n\nexport function NetworkCard({ n }: any) {\n  const _network: Network = n;\n  return (\n    <CardsStyle >\n      <Mui.Card>\n        <Mui.CardHeader\n          avatar={\n            <Mui.Avatar src={`${process.env.REACT_APP_NETWORK_API_URL}/icons/${_network.icon}`}\n              aria-label={_network.icon} />\n          }\n          action={\n            <Mui.IconButton aria-label=\"settings\">\n              {/* <Mui.MoreVertIcon /> */}\n            </Mui.IconButton>\n          }\n          title={_network.name}\n          subheader={_network.tokenSymbol[0]}\n        />\n      </Mui.Card>\n      <Ribbon active={_network.network}>{`${_network.network ? 'Connected' : 'Disconnected'}`}</Ribbon>\n    </CardsStyle>\n  )\n}","import { useEffect, useState } from 'react'\nimport axios from 'axios'\nimport * as Mui from '@mui/material';\nimport { Network } from './models/Network'\nimport { Centered, CardsContainer, H2Title } from './styles';\nimport { NetworkCard } from './components/Card';\n\nfunction App() {\n  const initNetwork: Network[] = [];\n  const [network, setNetwork] = useState(initNetwork)\n  const [networkNoStatus, setNetworkNoStatus] = useState(initNetwork)\n\n  const getStatus = (_network: Network[]) => {\n    return Promise.all(_network.map(async (e: Network, index: number) => {\n      const { data } = await axios(`${process.env.REACT_APP_NETWORK_API_URL}/api/v1/check/${e.name.toLowerCase()}`)\n      return { ...e, numeration: index + 1, network: data }\n    }))\n  }\n\n  useEffect(() => {\n    const getNetworkConn = async () => {\n      const { data } = await axios(`${process.env.REACT_APP_NETWORK_API_URL}/api/v1/chains/properties`)\n      const resp: any = Object.entries(data)\n        .map((e: any) => ({ ...e[1] }))\n      const _network: Network[] = resp.filter((e: Network) => e.tokenSymbol && e.tokenDecimals)\n        .sort((a: Network, b: Network) => {\n          const textA = a.name.toLowerCase();\n          const textB = b.name.toLowerCase();\n          return (textA < textB) ? -1 : (textA > textB) ? 1 : 0;\n        })\n      setNetworkNoStatus(_network);\n      setNetwork(await getStatus(_network))\n    }\n    getNetworkConn();\n\n  }, [])\n\n  useEffect(() => {\n    const setConnection = setInterval(async () => {\n      setNetwork(await getStatus(networkNoStatus))\n    }, 1000 * 300);\n\n    return () => {\n      clearInterval(setConnection)\n    }\n\n  }, [networkNoStatus])\n\n\n  return (network.length > 0\n    ? <>\n      <H2Title>SubsocialId networks status</H2Title>\n      <CardsContainer padding='2rem'>\n        {network.map((n: any) => (\n          <NetworkCard n={n} key={n.name} />\n        ))}\n      </CardsContainer>\n    </>\n    : (\n      <Centered>\n        <Mui.Box>\n          <Mui.CircularProgress />\n        </Mui.Box>\n      </Centered>\n    )\n\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}